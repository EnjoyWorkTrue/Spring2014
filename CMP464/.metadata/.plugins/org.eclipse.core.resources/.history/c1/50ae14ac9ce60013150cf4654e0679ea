package com.example.assignment5.service;

import com.example.assignment5.MainActivity;

import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.app.TaskStackBuilder;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.support.v4.app.NotificationCompat;
import android.util.Log;
import android.widget.Toast;

public class MyService extends Service implements notifyInterface{

	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}
	@Override
	public void onCreate() {
		Log.i("service","service created");
		new getRssTask(this,getBaseContext()).execute();
	}
	@Override
	public void onStart(Intent intent, int startId) {
		Log.i("service","service started");
		
	}
	@Override
	public void onDestroy() {
		
	}
	@Override
	public void notifyMessage() {
		NotificationCompat.Builder mBuilder = 
				new NotificationCompat.Builder(this).setContentTitle("Notification");
		
		Intent resultIntent = new Intent(this, MainActivity.class);
		startActivitie(resultIntent);
		TaskStackBuilder stackBuilder = TaskStackBuilder.create(ctx);
		// Adds the back stack for the Intent (but not the Intent itself)
		stackBuilder.addParentStack(MainActivity.class);
		// Adds the Intent that starts the Activity to the top of the stack
		stackBuilder.addNextIntent(resultIntent);
		PendingIntent resultPendingIntent =
		        stackBuilder.getPendingIntent(
		            0,
		            PendingIntent.FLAG_UPDATE_CURRENT
		        );
		Context a;
		Context.no
		mBuilder.setContentIntent(resultPendingIntent);
		NotificationManager mNotificationManager =
		    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		// mId allows you to update the notification later on.
		mNotificationManager.notify(1, mBuilder.build());
		
	}

}
