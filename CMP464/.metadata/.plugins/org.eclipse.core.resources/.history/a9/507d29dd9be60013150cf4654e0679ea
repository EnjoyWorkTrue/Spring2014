package com.example.assignment5.service;

import java.io.IOException;

import org.xmlpull.v1.XmlPullParserException;

import Utils.MyPullParser;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.TaskStackBuilder;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v4.app.NotificationCompat;

import com.example.assignment5.MainActivity;

public class getRssTask extends AsyncTask<Void, Void, String> {

	private String before;
	private String after;
	private Context ctx;

	public getRssTask(MyService myService,Context ctx) {
		this.ctx = ctx;
	}

	@Override
	protected String doInBackground(Void... arg0) {
		while(true){			
				try {
					Thread.sleep(20*1000);
					MyPullParser parser = MyPullParser.getInstance();
					synchronized (parser) {
						before = parser.getFirstPubDate();
						parser.clearInfo();
						parser.parse("http://rss.cnn.com/rss/cnn_topstories.rss");
						after = parser.getFirstPubDate();	
					}
					
				} catch (XmlPullParserException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				catch (InterruptedException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if(before.equals(after)){
					giveNotification();
				}
				
			
			
		}
	}

	private void giveNotification() {
		NotificationCompat.Builder mBuilder = 
				new NotificationCompat.Builder(ctx).setContentTitle("Notification");
		
		Intent resultIntent = new Intent(ctx, MainActivity.class);
		TaskStackBuilder stackBuilder = TaskStackBuilder.create(ctx);
		// Adds the back stack for the Intent (but not the Intent itself)
		stackBuilder.addParentStack(MainActivity.class);
		// Adds the Intent that starts the Activity to the top of the stack
		stackBuilder.addNextIntent(resultIntent);
		PendingIntent resultPendingIntent =
		        stackBuilder.getPendingIntent(
		            0,
		            PendingIntent.FLAG_UPDATE_CURRENT
		        );
		
		mBuilder.setContentIntent(resultPendingIntent);
		NotificationManager mNotificationManager =
		    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		// mId allows you to update the notification later on.
		mNotificationManager.notify(1, mBuilder.build());
	}

}
