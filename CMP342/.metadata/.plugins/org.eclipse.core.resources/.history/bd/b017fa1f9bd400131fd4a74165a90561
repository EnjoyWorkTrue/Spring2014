package Client;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

public class ChatClient implements Runnable{

	private Socket socket;
	private DataOutputStream streamOut;
	private Thread thread;
	private boolean done;
	private ChatClinetThread client;
	private BufferedReader console;
	
	
	public ChatClient(String serverName, int serverPort){
		
		try{
			socket = new Socket(serverName, serverPort);
			//System.out.println("Connected to socket: " + socket);
			start();
		}
		catch(UnknownHostException uhe){
			//System.out.println("Error Unknown Host: "+ uhe.getMessage());
		}
		catch(IOException ioe){
			//System.out.println("Unexpected exception: "+ ioe.getMessage());
		}
			
		
	}
	private void start() throws IOException {
		console = new BufferedReader(new InputStreamReader(System.in));
		streamOut = new DataOutputStream(socket.getOutputStream());
		if(thread == null){
			System.out.println("asd");
			client = new ChatClinetThread(this,socket);
			client.open();
			client.getNickNameList();
			//client.start();
			thread = new Thread(this);
			thread.start();
			
		}
		
	}
	public void run() {
		System.out.println("run thread.start");
		while(true){
		try {
			System.out.println("set your nick name");
			String line = console.readLine();
			if(client.check(line)){
				sendMessage(line);
				client.start();
			
				break;
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		System.out.println("---------------------- second seccion start");
		while(true){
		
			try {
				String line = console.readLine();
				sendMessage(line);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		
	}
	
	public void stop() {
		done = true;
		if(thread!=null){
			thread =null;
		}
	
		if(streamOut != null)
			try {
				if(streamOut != null)streamOut.close();
				if(socket != null) socket.close();
				if(client != null) client = null;
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
	
	}
	public void handle(String message) {
		//Receiving Messages
		if(message.equalsIgnoreCase("bye")){
			// BYE
		}
		else{
			// Here is the Part send Message to Application
			System.out.println(message);			
		}
		
	}
	public void sendMessage(String message) throws IOException{
		streamOut.writeUTF(message);
		streamOut.flush();
	}

	

}
