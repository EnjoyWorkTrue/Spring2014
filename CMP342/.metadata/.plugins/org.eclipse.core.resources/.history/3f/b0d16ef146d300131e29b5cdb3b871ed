package Japplet;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;

import javax.swing.JApplet;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class ChatApp extends JApplet implements ActionListener,KeyListener{
	Button connect;
	Button send;
	
	ChatClient client;
	public static String serverName = "0.0.0.0";
	public static int serverPort = 8000;
	int count = 0;
	JTextArea output;
	JTextArea input;
	
	JTextArea NickName;
	JLabel nickname_label;
	
	
	JScrollPane scroll;

	public void init() {
		setLayout(new BorderLayout());
		
		super.setSize(400,400);
		Panel buttonPanel = new Panel();
		
		//Setting Button
		connect = new Button("Connect");
		send = new Button("Send");
		
		// set Panel Layout
		buttonPanel.setLayout(new GridLayout(2,0));
		// add button in Panel
		buttonPanel.add(connect);
		buttonPanel.add(send);
		
		// set TextArea for output which editable(false)
		output = new JTextArea();
		output.setEditable(false);
		// you need scoll for output
		scroll = new JScrollPane(output);
		//JTextArea NickName;
		NickName = new JTextArea();
		nickname_label = new JLabel("NickName");
		JPanel nicknamePanel = new JPanel();
		nicknamePanel.setLayout(new GridLayout(0,2));
		nicknamePanel.add(nickname_label);
		nicknamePanel.add(NickName);
		
		// set TextArea for type input area
		input = new JTextArea();
		
		add(buttonPanel,BorderLayout.EAST);
		add(scroll,BorderLayout.CENTER);
		add(input,BorderLayout.SOUTH);
		add(nicknamePanel,BorderLayout.NORTH);
	
		
		//send.addActionListener(this);
		//connect.addActionListener(this);
		input.addKeyListener(this);
		connect.addActionListener(this);
		send.addActionListener(this);
		
		
	}

	
		
		
	

	@Override
	public void actionPerformed(ActionEvent e) {
		
			
		
		if(e.getSource()==connect){
			System.out.println("connect");
			client = new ChatClient(serverName, serverPort);
			while(true){
			try {
				client.sendID("david");
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			}
		}
		
		if(e.getSource()==send)
			
			sendMessage();
		

		
	}
	private void sendMessage() {
		if(!input.getText().equals("")){
		try {
			client.sendMessage(input.getText());
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		output.append(input.getText()+"\n");
		input.setText("");
		}
		
	}






	private boolean isNickName() {
		// TODO Auto-generated method stub
		return !NickName.getText().equals("");
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}






	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode()==10){
			sendMessage();
		}
		
		
	}






	@Override
	public void keyReleased(KeyEvent e) {
		if(e.getKeyCode()==10){
			input.setText("");
		}
		
	}


}
